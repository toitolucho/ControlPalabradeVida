package org.quarkbit.controlpalabravida.dao.domain;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class PersonaExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table personas
     *
     * @mbggenerated Fri Jun 03 02:37:34 BOT 2016
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table personas
     *
     * @mbggenerated Fri Jun 03 02:37:34 BOT 2016
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table personas
     *
     * @mbggenerated Fri Jun 03 02:37:34 BOT 2016
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table personas
     *
     * @mbggenerated Fri Jun 03 02:37:34 BOT 2016
     */
    public PersonaExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table personas
     *
     * @mbggenerated Fri Jun 03 02:37:34 BOT 2016
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table personas
     *
     * @mbggenerated Fri Jun 03 02:37:34 BOT 2016
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table personas
     *
     * @mbggenerated Fri Jun 03 02:37:34 BOT 2016
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table personas
     *
     * @mbggenerated Fri Jun 03 02:37:34 BOT 2016
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table personas
     *
     * @mbggenerated Fri Jun 03 02:37:34 BOT 2016
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table personas
     *
     * @mbggenerated Fri Jun 03 02:37:34 BOT 2016
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table personas
     *
     * @mbggenerated Fri Jun 03 02:37:34 BOT 2016
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table personas
     *
     * @mbggenerated Fri Jun 03 02:37:34 BOT 2016
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table personas
     *
     * @mbggenerated Fri Jun 03 02:37:34 BOT 2016
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table personas
     *
     * @mbggenerated Fri Jun 03 02:37:34 BOT 2016
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table personas
     *
     * @mbggenerated Fri Jun 03 02:37:34 BOT 2016
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andIdPersonaIsNull() {
            addCriterion("id_persona is null");
            return (Criteria) this;
        }

        public Criteria andIdPersonaIsNotNull() {
            addCriterion("id_persona is not null");
            return (Criteria) this;
        }

        public Criteria andIdPersonaEqualTo(Integer value) {
            addCriterion("id_persona =", value, "idPersona");
            return (Criteria) this;
        }
        
        public Criteria andIdEventoEqualTo(Integer value) {
            addCriterion("id_evento =", value, "id_evento");
            return (Criteria) this;
        }

        public Criteria andIdPersonaNotEqualTo(Integer value) {
            addCriterion("id_persona <>", value, "idPersona");
            return (Criteria) this;
        }

        public Criteria andIdPersonaGreaterThan(Integer value) {
            addCriterion("id_persona >", value, "idPersona");
            return (Criteria) this;
        }

        public Criteria andIdPersonaGreaterThanOrEqualTo(Integer value) {
            addCriterion("id_persona >=", value, "idPersona");
            return (Criteria) this;
        }

        public Criteria andIdPersonaLessThan(Integer value) {
            addCriterion("id_persona <", value, "idPersona");
            return (Criteria) this;
        }

        public Criteria andIdPersonaLessThanOrEqualTo(Integer value) {
            addCriterion("id_persona <=", value, "idPersona");
            return (Criteria) this;
        }

        public Criteria andIdPersonaIn(List<Integer> values) {
            addCriterion("id_persona in", values, "idPersona");
            return (Criteria) this;
        }

        public Criteria andIdPersonaNotIn(List<Integer> values) {
            addCriterion("id_persona not in", values, "idPersona");
            return (Criteria) this;
        }

        public Criteria andIdPersonaBetween(Integer value1, Integer value2) {
            addCriterion("id_persona between", value1, value2, "idPersona");
            return (Criteria) this;
        }

        public Criteria andIdPersonaNotBetween(Integer value1, Integer value2) {
            addCriterion("id_persona not between", value1, value2, "idPersona");
            return (Criteria) this;
        }

        public Criteria andCiIsNull() {
            addCriterion("ci is null");
            return (Criteria) this;
        }

        public Criteria andCiIsNotNull() {
            addCriterion("ci is not null");
            return (Criteria) this;
        }

        public Criteria andCiEqualTo(String value) {
            addCriterion("ci =", value, "ci");
            return (Criteria) this;
        }

        public Criteria andCiNotEqualTo(String value) {
            addCriterion("ci <>", value, "ci");
            return (Criteria) this;
        }

        public Criteria andCiGreaterThan(String value) {
            addCriterion("ci >", value, "ci");
            return (Criteria) this;
        }

        public Criteria andCiGreaterThanOrEqualTo(String value) {
            addCriterion("ci >=", value, "ci");
            return (Criteria) this;
        }

        public Criteria andCiLessThan(String value) {
            addCriterion("ci <", value, "ci");
            return (Criteria) this;
        }

        public Criteria andCiLessThanOrEqualTo(String value) {
            addCriterion("ci <=", value, "ci");
            return (Criteria) this;
        }

        public Criteria andCiLike(String value) {
            addCriterion("ci like", value, "ci");
            return (Criteria) this;
        }

        public Criteria andCiNotLike(String value) {
            addCriterion("ci not like", value, "ci");
            return (Criteria) this;
        }

        public Criteria andCiIn(List<String> values) {
            addCriterion("ci in", values, "ci");
            return (Criteria) this;
        }

        public Criteria andCiNotIn(List<String> values) {
            addCriterion("ci not in", values, "ci");
            return (Criteria) this;
        }

        public Criteria andCiBetween(String value1, String value2) {
            addCriterion("ci between", value1, value2, "ci");
            return (Criteria) this;
        }

        public Criteria andCiNotBetween(String value1, String value2) {
            addCriterion("ci not between", value1, value2, "ci");
            return (Criteria) this;
        }

        public Criteria andNombresIsNull() {
            addCriterion("nombres is null");
            return (Criteria) this;
        }

        public Criteria andNombresIsNotNull() {
            addCriterion("nombres is not null");
            return (Criteria) this;
        }

        public Criteria andNombresEqualTo(String value) {
            addCriterion("nombres =", value, "nombres");
            return (Criteria) this;
        }
        
        public Criteria andNombreCompletoEqualTo(String value) {
            addCriterion("upper(trim(nombres) || ' ' || trim(apellidos)) =", value, "nombre completo");
            return (Criteria) this;
        }
        
        public Criteria andNombreCompletoLike(String value) {
            addCriterion("upper(trim(nombres) || ' ' || trim(apellidos)) like", value, "nombre completo");
            return (Criteria) this;
        }

        public Criteria andNombresNotEqualTo(String value) {
            addCriterion("nombres <>", value, "nombres");
            return (Criteria) this;
        }

        public Criteria andNombresGreaterThan(String value) {
            addCriterion("nombres >", value, "nombres");
            return (Criteria) this;
        }

        public Criteria andNombresGreaterThanOrEqualTo(String value) {
            addCriterion("nombres >=", value, "nombres");
            return (Criteria) this;
        }

        public Criteria andNombresLessThan(String value) {
            addCriterion("nombres <", value, "nombres");
            return (Criteria) this;
        }

        public Criteria andNombresLessThanOrEqualTo(String value) {
            addCriterion("nombres <=", value, "nombres");
            return (Criteria) this;
        }

        public Criteria andNombresLike(String value) {
            addCriterion("nombres like", value, "nombres");
            return (Criteria) this;
        }

        public Criteria andNombresNotLike(String value) {
            addCriterion("nombres not like", value, "nombres");
            return (Criteria) this;
        }

        public Criteria andNombresIn(List<String> values) {
            addCriterion("nombres in", values, "nombres");
            return (Criteria) this;
        }

        public Criteria andNombresNotIn(List<String> values) {
            addCriterion("nombres not in", values, "nombres");
            return (Criteria) this;
        }

        public Criteria andNombresBetween(String value1, String value2) {
            addCriterion("nombres between", value1, value2, "nombres");
            return (Criteria) this;
        }

        public Criteria andNombresNotBetween(String value1, String value2) {
            addCriterion("nombres not between", value1, value2, "nombres");
            return (Criteria) this;
        }

        public Criteria andApellidosIsNull() {
            addCriterion("apellidos is null");
            return (Criteria) this;
        }

        public Criteria andApellidosIsNotNull() {
            addCriterion("apellidos is not null");
            return (Criteria) this;
        }

        public Criteria andApellidosEqualTo(String value) {
            addCriterion("apellidos =", value, "apellidos");
            return (Criteria) this;
        }

        public Criteria andApellidosNotEqualTo(String value) {
            addCriterion("apellidos <>", value, "apellidos");
            return (Criteria) this;
        }

        public Criteria andApellidosGreaterThan(String value) {
            addCriterion("apellidos >", value, "apellidos");
            return (Criteria) this;
        }

        public Criteria andApellidosGreaterThanOrEqualTo(String value) {
            addCriterion("apellidos >=", value, "apellidos");
            return (Criteria) this;
        }

        public Criteria andApellidosLessThan(String value) {
            addCriterion("apellidos <", value, "apellidos");
            return (Criteria) this;
        }

        public Criteria andApellidosLessThanOrEqualTo(String value) {
            addCriterion("apellidos <=", value, "apellidos");
            return (Criteria) this;
        }

        public Criteria andApellidosLike(String value) {
            addCriterion("apellidos like", value, "apellidos");
            return (Criteria) this;
        }
        
        
        

        public Criteria andApellidosNotLike(String value) {
            addCriterion("apellidos not like", value, "apellidos");
            return (Criteria) this;
        }

        public Criteria andApellidosIn(List<String> values) {
            addCriterion("apellidos in", values, "apellidos");
            return (Criteria) this;
        }

        public Criteria andApellidosNotIn(List<String> values) {
            addCriterion("apellidos not in", values, "apellidos");
            return (Criteria) this;
        }

        public Criteria andApellidosBetween(String value1, String value2) {
            addCriterion("apellidos between", value1, value2, "apellidos");
            return (Criteria) this;
        }

        public Criteria andApellidosNotBetween(String value1, String value2) {
            addCriterion("apellidos not between", value1, value2, "apellidos");
            return (Criteria) this;
        }

        public Criteria andSexoIsNull() {
            addCriterion("sexo is null");
            return (Criteria) this;
        }

        public Criteria andSexoIsNotNull() {
            addCriterion("sexo is not null");
            return (Criteria) this;
        }

        public Criteria andSexoEqualTo(String value) {
            addCriterion("sexo =", value, "sexo");
            return (Criteria) this;
        }

        public Criteria andSexoNotEqualTo(String value) {
            addCriterion("sexo <>", value, "sexo");
            return (Criteria) this;
        }

        public Criteria andSexoGreaterThan(String value) {
            addCriterion("sexo >", value, "sexo");
            return (Criteria) this;
        }

        public Criteria andSexoGreaterThanOrEqualTo(String value) {
            addCriterion("sexo >=", value, "sexo");
            return (Criteria) this;
        }

        public Criteria andSexoLessThan(String value) {
            addCriterion("sexo <", value, "sexo");
            return (Criteria) this;
        }

        public Criteria andSexoLessThanOrEqualTo(String value) {
            addCriterion("sexo <=", value, "sexo");
            return (Criteria) this;
        }

        public Criteria andSexoLike(String value) {
            addCriterion("sexo like", value, "sexo");
            return (Criteria) this;
        }

        public Criteria andSexoNotLike(String value) {
            addCriterion("sexo not like", value, "sexo");
            return (Criteria) this;
        }

        public Criteria andSexoIn(List<String> values) {
            addCriterion("sexo in", values, "sexo");
            return (Criteria) this;
        }

        public Criteria andSexoNotIn(List<String> values) {
            addCriterion("sexo not in", values, "sexo");
            return (Criteria) this;
        }

        public Criteria andSexoBetween(String value1, String value2) {
            addCriterion("sexo between", value1, value2, "sexo");
            return (Criteria) this;
        }

        public Criteria andSexoNotBetween(String value1, String value2) {
            addCriterion("sexo not between", value1, value2, "sexo");
            return (Criteria) this;
        }

        public Criteria andCelularIsNull() {
            addCriterion("celular is null");
            return (Criteria) this;
        }

        public Criteria andCelularIsNotNull() {
            addCriterion("celular is not null");
            return (Criteria) this;
        }

        public Criteria andCelularEqualTo(String value) {
            addCriterion("celular =", value, "celular");
            return (Criteria) this;
        }

        public Criteria andCelularNotEqualTo(String value) {
            addCriterion("celular <>", value, "celular");
            return (Criteria) this;
        }

        public Criteria andCelularGreaterThan(String value) {
            addCriterion("celular >", value, "celular");
            return (Criteria) this;
        }

        public Criteria andCelularGreaterThanOrEqualTo(String value) {
            addCriterion("celular >=", value, "celular");
            return (Criteria) this;
        }

        public Criteria andCelularLessThan(String value) {
            addCriterion("celular <", value, "celular");
            return (Criteria) this;
        }

        public Criteria andCelularLessThanOrEqualTo(String value) {
            addCriterion("celular <=", value, "celular");
            return (Criteria) this;
        }

        public Criteria andCelularLike(String value) {
            addCriterion("celular like", value, "celular");
            return (Criteria) this;
        }

        public Criteria andCelularNotLike(String value) {
            addCriterion("celular not like", value, "celular");
            return (Criteria) this;
        }

        public Criteria andCelularIn(List<String> values) {
            addCriterion("celular in", values, "celular");
            return (Criteria) this;
        }

        public Criteria andCelularNotIn(List<String> values) {
            addCriterion("celular not in", values, "celular");
            return (Criteria) this;
        }

        public Criteria andCelularBetween(String value1, String value2) {
            addCriterion("celular between", value1, value2, "celular");
            return (Criteria) this;
        }

        public Criteria andCelularNotBetween(String value1, String value2) {
            addCriterion("celular not between", value1, value2, "celular");
            return (Criteria) this;
        }

        public Criteria andFechaNacimientoIsNull() {
            addCriterion("fecha_nacimiento is null");
            return (Criteria) this;
        }

        public Criteria andFechaNacimientoIsNotNull() {
            addCriterion("fecha_nacimiento is not null");
            return (Criteria) this;
        }

        public Criteria andFechaNacimientoEqualTo(Date value) {
            addCriterionForJDBCDate("fecha_nacimiento =", value, "fechaNacimiento");
            return (Criteria) this;
        }

        public Criteria andFechaNacimientoNotEqualTo(Date value) {
            addCriterionForJDBCDate("fecha_nacimiento <>", value, "fechaNacimiento");
            return (Criteria) this;
        }

        public Criteria andFechaNacimientoGreaterThan(Date value) {
            addCriterionForJDBCDate("fecha_nacimiento >", value, "fechaNacimiento");
            return (Criteria) this;
        }

        public Criteria andFechaNacimientoGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("fecha_nacimiento >=", value, "fechaNacimiento");
            return (Criteria) this;
        }

        public Criteria andFechaNacimientoLessThan(Date value) {
            addCriterionForJDBCDate("fecha_nacimiento <", value, "fechaNacimiento");
            return (Criteria) this;
        }

        public Criteria andFechaNacimientoLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("fecha_nacimiento <=", value, "fechaNacimiento");
            return (Criteria) this;
        }

        public Criteria andFechaNacimientoIn(List<Date> values) {
            addCriterionForJDBCDate("fecha_nacimiento in", values, "fechaNacimiento");
            return (Criteria) this;
        }

        public Criteria andFechaNacimientoNotIn(List<Date> values) {
            addCriterionForJDBCDate("fecha_nacimiento not in", values, "fechaNacimiento");
            return (Criteria) this;
        }

        public Criteria andFechaNacimientoBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("fecha_nacimiento between", value1, value2, "fechaNacimiento");
            return (Criteria) this;
        }

        public Criteria andFechaNacimientoNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("fecha_nacimiento not between", value1, value2, "fechaNacimiento");
            return (Criteria) this;
        }

        public Criteria andTipoPersonaIsNull() {
            addCriterion("tipo_persona is null");
            return (Criteria) this;
        }

        public Criteria andTipoPersonaIsNotNull() {
            addCriterion("tipo_persona is not null");
            return (Criteria) this;
        }

        public Criteria andTipoPersonaEqualTo(String value) {
            addCriterion("tipo_persona =", value, "tipoPersona");
            return (Criteria) this;
        }

        public Criteria andTipoPersonaNotEqualTo(String value) {
            addCriterion("tipo_persona <>", value, "tipoPersona");
            return (Criteria) this;
        }

        public Criteria andTipoPersonaGreaterThan(String value) {
            addCriterion("tipo_persona >", value, "tipoPersona");
            return (Criteria) this;
        }

        public Criteria andTipoPersonaGreaterThanOrEqualTo(String value) {
            addCriterion("tipo_persona >=", value, "tipoPersona");
            return (Criteria) this;
        }

        public Criteria andTipoPersonaLessThan(String value) {
            addCriterion("tipo_persona <", value, "tipoPersona");
            return (Criteria) this;
        }

        public Criteria andTipoPersonaLessThanOrEqualTo(String value) {
            addCriterion("tipo_persona <=", value, "tipoPersona");
            return (Criteria) this;
        }

        public Criteria andTipoPersonaLike(String value) {
            addCriterion("tipo_persona like", value, "tipoPersona");
            return (Criteria) this;
        }

        public Criteria andTipoPersonaNotLike(String value) {
            addCriterion("tipo_persona not like", value, "tipoPersona");
            return (Criteria) this;
        }

        public Criteria andTipoPersonaIn(List<String> values) {
            addCriterion("tipo_persona in", values, "tipoPersona");
            return (Criteria) this;
        }

        public Criteria andTipoPersonaNotIn(List<String> values) {
            addCriterion("tipo_persona not in", values, "tipoPersona");
            return (Criteria) this;
        }

        public Criteria andTipoPersonaBetween(String value1, String value2) {
            addCriterion("tipo_persona between", value1, value2, "tipoPersona");
            return (Criteria) this;
        }

        public Criteria andTipoPersonaNotBetween(String value1, String value2) {
            addCriterion("tipo_persona not between", value1, value2, "tipoPersona");
            return (Criteria) this;
        }

        public Criteria andRutaFotografiaIsNull() {
            addCriterion("ruta_fotografia is null");
            return (Criteria) this;
        }

        public Criteria andRutaFotografiaIsNotNull() {
            addCriterion("ruta_fotografia is not null");
            return (Criteria) this;
        }

        public Criteria andRutaFotografiaEqualTo(String value) {
            addCriterion("ruta_fotografia =", value, "rutaFotografia");
            return (Criteria) this;
        }

        public Criteria andRutaFotografiaNotEqualTo(String value) {
            addCriterion("ruta_fotografia <>", value, "rutaFotografia");
            return (Criteria) this;
        }

        public Criteria andRutaFotografiaGreaterThan(String value) {
            addCriterion("ruta_fotografia >", value, "rutaFotografia");
            return (Criteria) this;
        }

        public Criteria andRutaFotografiaGreaterThanOrEqualTo(String value) {
            addCriterion("ruta_fotografia >=", value, "rutaFotografia");
            return (Criteria) this;
        }

        public Criteria andRutaFotografiaLessThan(String value) {
            addCriterion("ruta_fotografia <", value, "rutaFotografia");
            return (Criteria) this;
        }

        public Criteria andRutaFotografiaLessThanOrEqualTo(String value) {
            addCriterion("ruta_fotografia <=", value, "rutaFotografia");
            return (Criteria) this;
        }

        public Criteria andRutaFotografiaLike(String value) {
            addCriterion("ruta_fotografia like", value, "rutaFotografia");
            return (Criteria) this;
        }

        public Criteria andRutaFotografiaNotLike(String value) {
            addCriterion("ruta_fotografia not like", value, "rutaFotografia");
            return (Criteria) this;
        }

        public Criteria andRutaFotografiaIn(List<String> values) {
            addCriterion("ruta_fotografia in", values, "rutaFotografia");
            return (Criteria) this;
        }

        public Criteria andRutaFotografiaNotIn(List<String> values) {
            addCriterion("ruta_fotografia not in", values, "rutaFotografia");
            return (Criteria) this;
        }

        public Criteria andRutaFotografiaBetween(String value1, String value2) {
            addCriterion("ruta_fotografia between", value1, value2, "rutaFotografia");
            return (Criteria) this;
        }

        public Criteria andRutaFotografiaNotBetween(String value1, String value2) {
            addCriterion("ruta_fotografia not between", value1, value2, "rutaFotografia");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table personas
     *
     * @mbggenerated do_not_delete_during_merge Fri Jun 03 02:37:34 BOT 2016
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table personas
     *
     * @mbggenerated Fri Jun 03 02:37:34 BOT 2016
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}