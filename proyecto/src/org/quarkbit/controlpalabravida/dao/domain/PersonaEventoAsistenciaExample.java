package org.quarkbit.controlpalabravida.dao.domain;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class PersonaEventoAsistenciaExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table personas_eventos_asistencia
     *
     * @mbggenerated Fri Jun 03 02:37:34 BOT 2016
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table personas_eventos_asistencia
     *
     * @mbggenerated Fri Jun 03 02:37:34 BOT 2016
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table personas_eventos_asistencia
     *
     * @mbggenerated Fri Jun 03 02:37:34 BOT 2016
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table personas_eventos_asistencia
     *
     * @mbggenerated Fri Jun 03 02:37:34 BOT 2016
     */
    public PersonaEventoAsistenciaExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table personas_eventos_asistencia
     *
     * @mbggenerated Fri Jun 03 02:37:34 BOT 2016
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table personas_eventos_asistencia
     *
     * @mbggenerated Fri Jun 03 02:37:34 BOT 2016
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table personas_eventos_asistencia
     *
     * @mbggenerated Fri Jun 03 02:37:34 BOT 2016
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table personas_eventos_asistencia
     *
     * @mbggenerated Fri Jun 03 02:37:34 BOT 2016
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table personas_eventos_asistencia
     *
     * @mbggenerated Fri Jun 03 02:37:34 BOT 2016
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table personas_eventos_asistencia
     *
     * @mbggenerated Fri Jun 03 02:37:34 BOT 2016
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table personas_eventos_asistencia
     *
     * @mbggenerated Fri Jun 03 02:37:34 BOT 2016
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table personas_eventos_asistencia
     *
     * @mbggenerated Fri Jun 03 02:37:34 BOT 2016
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table personas_eventos_asistencia
     *
     * @mbggenerated Fri Jun 03 02:37:34 BOT 2016
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table personas_eventos_asistencia
     *
     * @mbggenerated Fri Jun 03 02:37:34 BOT 2016
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table personas_eventos_asistencia
     *
     * @mbggenerated Fri Jun 03 02:37:34 BOT 2016
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andIdAsistenciaIsNull() {
            addCriterion("id_asistencia is null");
            return (Criteria) this;
        }

        public Criteria andIdAsistenciaIsNotNull() {
            addCriterion("id_asistencia is not null");
            return (Criteria) this;
        }

        public Criteria andIdAsistenciaEqualTo(Integer value) {
            addCriterion("id_asistencia =", value, "idAsistencia");
            return (Criteria) this;
        }

        public Criteria andIdAsistenciaNotEqualTo(Integer value) {
            addCriterion("id_asistencia <>", value, "idAsistencia");
            return (Criteria) this;
        }

        public Criteria andIdAsistenciaGreaterThan(Integer value) {
            addCriterion("id_asistencia >", value, "idAsistencia");
            return (Criteria) this;
        }

        public Criteria andIdAsistenciaGreaterThanOrEqualTo(Integer value) {
            addCriterion("id_asistencia >=", value, "idAsistencia");
            return (Criteria) this;
        }

        public Criteria andIdAsistenciaLessThan(Integer value) {
            addCriterion("id_asistencia <", value, "idAsistencia");
            return (Criteria) this;
        }

        public Criteria andIdAsistenciaLessThanOrEqualTo(Integer value) {
            addCriterion("id_asistencia <=", value, "idAsistencia");
            return (Criteria) this;
        }

        public Criteria andIdAsistenciaIn(List<Integer> values) {
            addCriterion("id_asistencia in", values, "idAsistencia");
            return (Criteria) this;
        }

        public Criteria andIdAsistenciaNotIn(List<Integer> values) {
            addCriterion("id_asistencia not in", values, "idAsistencia");
            return (Criteria) this;
        }

        public Criteria andIdAsistenciaBetween(Integer value1, Integer value2) {
            addCriterion("id_asistencia between", value1, value2, "idAsistencia");
            return (Criteria) this;
        }

        public Criteria andIdAsistenciaNotBetween(Integer value1, Integer value2) {
            addCriterion("id_asistencia not between", value1, value2, "idAsistencia");
            return (Criteria) this;
        }

        public Criteria andIdEventoIsNull() {
            addCriterion("id_evento is null");
            return (Criteria) this;
        }

        public Criteria andIdEventoIsNotNull() {
            addCriterion("id_evento is not null");
            return (Criteria) this;
        }

        public Criteria andIdEventoEqualTo(Integer value) {
            addCriterion("id_evento =", value, "idEvento");
            return (Criteria) this;
        }

        public Criteria andIdEventoNotEqualTo(Integer value) {
            addCriterion("id_evento <>", value, "idEvento");
            return (Criteria) this;
        }

        public Criteria andIdEventoGreaterThan(Integer value) {
            addCriterion("id_evento >", value, "idEvento");
            return (Criteria) this;
        }

        public Criteria andIdEventoGreaterThanOrEqualTo(Integer value) {
            addCriterion("id_evento >=", value, "idEvento");
            return (Criteria) this;
        }

        public Criteria andIdEventoLessThan(Integer value) {
            addCriterion("id_evento <", value, "idEvento");
            return (Criteria) this;
        }

        public Criteria andIdEventoLessThanOrEqualTo(Integer value) {
            addCriterion("id_evento <=", value, "idEvento");
            return (Criteria) this;
        }

        public Criteria andIdEventoIn(List<Integer> values) {
            addCriterion("id_evento in", values, "idEvento");
            return (Criteria) this;
        }

        public Criteria andIdEventoNotIn(List<Integer> values) {
            addCriterion("id_evento not in", values, "idEvento");
            return (Criteria) this;
        }

        public Criteria andIdEventoBetween(Integer value1, Integer value2) {
            addCriterion("id_evento between", value1, value2, "idEvento");
            return (Criteria) this;
        }

        public Criteria andIdEventoNotBetween(Integer value1, Integer value2) {
            addCriterion("id_evento not between", value1, value2, "idEvento");
            return (Criteria) this;
        }

        public Criteria andIdPersonaIsNull() {
            addCriterion("id_persona is null");
            return (Criteria) this;
        }

        public Criteria andIdPersonaIsNotNull() {
            addCriterion("id_persona is not null");
            return (Criteria) this;
        }

        public Criteria andIdPersonaEqualTo(Integer value) {
            addCriterion("id_persona =", value, "idPersona");
            return (Criteria) this;
        }

        public Criteria andIdPersonaNotEqualTo(Integer value) {
            addCriterion("id_persona <>", value, "idPersona");
            return (Criteria) this;
        }

        public Criteria andIdPersonaGreaterThan(Integer value) {
            addCriterion("id_persona >", value, "idPersona");
            return (Criteria) this;
        }

        public Criteria andIdPersonaGreaterThanOrEqualTo(Integer value) {
            addCriterion("id_persona >=", value, "idPersona");
            return (Criteria) this;
        }

        public Criteria andIdPersonaLessThan(Integer value) {
            addCriterion("id_persona <", value, "idPersona");
            return (Criteria) this;
        }

        public Criteria andIdPersonaLessThanOrEqualTo(Integer value) {
            addCriterion("id_persona <=", value, "idPersona");
            return (Criteria) this;
        }

        public Criteria andIdPersonaIn(List<Integer> values) {
            addCriterion("id_persona in", values, "idPersona");
            return (Criteria) this;
        }

        public Criteria andIdPersonaNotIn(List<Integer> values) {
            addCriterion("id_persona not in", values, "idPersona");
            return (Criteria) this;
        }

        public Criteria andIdPersonaBetween(Integer value1, Integer value2) {
            addCriterion("id_persona between", value1, value2, "idPersona");
            return (Criteria) this;
        }

        public Criteria andIdPersonaNotBetween(Integer value1, Integer value2) {
            addCriterion("id_persona not between", value1, value2, "idPersona");
            return (Criteria) this;
        }

        public Criteria andFechaRegistroIsNull() {
            addCriterion("fecha_registro is null");
            return (Criteria) this;
        }

        public Criteria andFechaRegistroIsNotNull() {
            addCriterion("fecha_registro is not null");
            return (Criteria) this;
        }

        public Criteria andFechaRegistroEqualTo(Date value) {
            addCriterionForJDBCDate("fecha_registro =", value, "fechaRegistro");
            return (Criteria) this;
        }

        public Criteria andFechaRegistroNotEqualTo(Date value) {
            addCriterionForJDBCDate("fecha_registro <>", value, "fechaRegistro");
            return (Criteria) this;
        }

        public Criteria andFechaRegistroGreaterThan(Date value) {
            addCriterionForJDBCDate("fecha_registro >", value, "fechaRegistro");
            return (Criteria) this;
        }

        public Criteria andFechaRegistroGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("fecha_registro >=", value, "fechaRegistro");
            return (Criteria) this;
        }

        public Criteria andFechaRegistroLessThan(Date value) {
            addCriterionForJDBCDate("fecha_registro <", value, "fechaRegistro");
            return (Criteria) this;
        }

        public Criteria andFechaRegistroLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("fecha_registro <=", value, "fechaRegistro");
            return (Criteria) this;
        }

        public Criteria andFechaRegistroIn(List<Date> values) {
            addCriterionForJDBCDate("fecha_registro in", values, "fechaRegistro");
            return (Criteria) this;
        }

        public Criteria andFechaRegistroNotIn(List<Date> values) {
            addCriterionForJDBCDate("fecha_registro not in", values, "fechaRegistro");
            return (Criteria) this;
        }

        public Criteria andFechaRegistroBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("fecha_registro between", value1, value2, "fechaRegistro");
            return (Criteria) this;
        }

        public Criteria andFechaRegistroNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("fecha_registro not between", value1, value2, "fechaRegistro");
            return (Criteria) this;
        }

        public Criteria andHoraRegistroIsNull() {
            addCriterion("hora_registro is null");
            return (Criteria) this;
        }

        public Criteria andHoraRegistroIsNotNull() {
            addCriterion("hora_registro is not null");
            return (Criteria) this;
        }

        public Criteria andHoraRegistroEqualTo(Date value) {
            addCriterionForJDBCDate("hora_registro =", value, "horaRegistro");
            return (Criteria) this;
        }

        public Criteria andHoraRegistroNotEqualTo(Date value) {
            addCriterionForJDBCDate("hora_registro <>", value, "horaRegistro");
            return (Criteria) this;
        }

        public Criteria andHoraRegistroGreaterThan(Date value) {
            addCriterionForJDBCDate("hora_registro >", value, "horaRegistro");
            return (Criteria) this;
        }

        public Criteria andHoraRegistroGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("hora_registro >=", value, "horaRegistro");
            return (Criteria) this;
        }

        public Criteria andHoraRegistroLessThan(Date value) {
            addCriterionForJDBCDate("hora_registro <", value, "horaRegistro");
            return (Criteria) this;
        }

        public Criteria andHoraRegistroLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("hora_registro <=", value, "horaRegistro");
            return (Criteria) this;
        }

        public Criteria andHoraRegistroIn(List<Date> values) {
            addCriterionForJDBCDate("hora_registro in", values, "horaRegistro");
            return (Criteria) this;
        }

        public Criteria andHoraRegistroNotIn(List<Date> values) {
            addCriterionForJDBCDate("hora_registro not in", values, "horaRegistro");
            return (Criteria) this;
        }

        public Criteria andHoraRegistroBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("hora_registro between", value1, value2, "horaRegistro");
            return (Criteria) this;
        }

        public Criteria andHoraRegistroNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("hora_registro not between", value1, value2, "horaRegistro");
            return (Criteria) this;
        }

        public Criteria andTipoAsistenciaIsNull() {
            addCriterion("tipo_asistencia is null");
            return (Criteria) this;
        }

        public Criteria andTipoAsistenciaIsNotNull() {
            addCriterion("tipo_asistencia is not null");
            return (Criteria) this;
        }

        public Criteria andTipoAsistenciaEqualTo(String value) {
            addCriterion("tipo_asistencia =", value, "tipoAsistencia");
            return (Criteria) this;
        }

        public Criteria andTipoAsistenciaNotEqualTo(String value) {
            addCriterion("tipo_asistencia <>", value, "tipoAsistencia");
            return (Criteria) this;
        }

        public Criteria andTipoAsistenciaGreaterThan(String value) {
            addCriterion("tipo_asistencia >", value, "tipoAsistencia");
            return (Criteria) this;
        }

        public Criteria andTipoAsistenciaGreaterThanOrEqualTo(String value) {
            addCriterion("tipo_asistencia >=", value, "tipoAsistencia");
            return (Criteria) this;
        }

        public Criteria andTipoAsistenciaLessThan(String value) {
            addCriterion("tipo_asistencia <", value, "tipoAsistencia");
            return (Criteria) this;
        }

        public Criteria andTipoAsistenciaLessThanOrEqualTo(String value) {
            addCriterion("tipo_asistencia <=", value, "tipoAsistencia");
            return (Criteria) this;
        }

        public Criteria andTipoAsistenciaLike(String value) {
            addCriterion("tipo_asistencia like", value, "tipoAsistencia");
            return (Criteria) this;
        }

        public Criteria andTipoAsistenciaNotLike(String value) {
            addCriterion("tipo_asistencia not like", value, "tipoAsistencia");
            return (Criteria) this;
        }

        public Criteria andTipoAsistenciaIn(List<String> values) {
            addCriterion("tipo_asistencia in", values, "tipoAsistencia");
            return (Criteria) this;
        }

        public Criteria andTipoAsistenciaNotIn(List<String> values) {
            addCriterion("tipo_asistencia not in", values, "tipoAsistencia");
            return (Criteria) this;
        }

        public Criteria andTipoAsistenciaBetween(String value1, String value2) {
            addCriterion("tipo_asistencia between", value1, value2, "tipoAsistencia");
            return (Criteria) this;
        }

        public Criteria andTipoAsistenciaNotBetween(String value1, String value2) {
            addCriterion("tipo_asistencia not between", value1, value2, "tipoAsistencia");
            return (Criteria) this;
        }

        public Criteria andTipoIngresoIsNull() {
            addCriterion("tipo_ingreso is null");
            return (Criteria) this;
        }

        public Criteria andTipoIngresoIsNotNull() {
            addCriterion("tipo_ingreso is not null");
            return (Criteria) this;
        }

        public Criteria andTipoIngresoEqualTo(String value) {
            addCriterion("tipo_ingreso =", value, "tipoIngreso");
            return (Criteria) this;
        }

        public Criteria andTipoIngresoNotEqualTo(String value) {
            addCriterion("tipo_ingreso <>", value, "tipoIngreso");
            return (Criteria) this;
        }

        public Criteria andTipoIngresoGreaterThan(String value) {
            addCriterion("tipo_ingreso >", value, "tipoIngreso");
            return (Criteria) this;
        }

        public Criteria andTipoIngresoGreaterThanOrEqualTo(String value) {
            addCriterion("tipo_ingreso >=", value, "tipoIngreso");
            return (Criteria) this;
        }

        public Criteria andTipoIngresoLessThan(String value) {
            addCriterion("tipo_ingreso <", value, "tipoIngreso");
            return (Criteria) this;
        }

        public Criteria andTipoIngresoLessThanOrEqualTo(String value) {
            addCriterion("tipo_ingreso <=", value, "tipoIngreso");
            return (Criteria) this;
        }

        public Criteria andTipoIngresoLike(String value) {
            addCriterion("tipo_ingreso like", value, "tipoIngreso");
            return (Criteria) this;
        }

        public Criteria andTipoIngresoNotLike(String value) {
            addCriterion("tipo_ingreso not like", value, "tipoIngreso");
            return (Criteria) this;
        }

        public Criteria andTipoIngresoIn(List<String> values) {
            addCriterion("tipo_ingreso in", values, "tipoIngreso");
            return (Criteria) this;
        }

        public Criteria andTipoIngresoNotIn(List<String> values) {
            addCriterion("tipo_ingreso not in", values, "tipoIngreso");
            return (Criteria) this;
        }

        public Criteria andTipoIngresoBetween(String value1, String value2) {
            addCriterion("tipo_ingreso between", value1, value2, "tipoIngreso");
            return (Criteria) this;
        }

        public Criteria andTipoIngresoNotBetween(String value1, String value2) {
            addCriterion("tipo_ingreso not between", value1, value2, "tipoIngreso");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table personas_eventos_asistencia
     *
     * @mbggenerated do_not_delete_during_merge Fri Jun 03 02:37:34 BOT 2016
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table personas_eventos_asistencia
     *
     * @mbggenerated Fri Jun 03 02:37:34 BOT 2016
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}